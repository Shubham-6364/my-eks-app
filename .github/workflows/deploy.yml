name: CI/CD to EKS with Docker Hub

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-south-1              # ‚úÖ Change to your AWS region
  EKS_CLUSTER_NAME: my-eks-cluster    # ‚úÖ Change to your cluster name
  DEPLOYMENT_NAME: my-eks-app
  NAMESPACE: default
  DOCKER_IMAGE: codersdiary/my-eks-app

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # 1Ô∏è‚É£ Login to Docker Hub
    - name: Docker Hub Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # 2Ô∏è‚É£ Build & Push Docker image
    - name: Build & Push Docker Image
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        IMAGE_URI=${DOCKER_IMAGE}:${IMAGE_TAG}
        echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

        echo "üî® Building Docker image..."
        docker build -t $IMAGE_URI .

        echo "üì§ Pushing to Docker Hub..."
        docker push $IMAGE_URI

    # 3Ô∏è‚É£ Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # 4Ô∏è‚É£ Update kubeconfig for EKS
    - name: Update kubeconfig
      run: aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME

    # 5Ô∏è‚É£ Apply manifests (first time only)
    - name: Apply Kubernetes manifests
      run: |
        kubectl apply -f k8s/

    # 6Ô∏è‚É£ Update Deployment image with new Docker Hub tag
    - name: Update Deployment image
      run: |
        kubectl set image deployment/${DEPLOYMENT_NAME} ${DEPLOYMENT_NAME}=$IMAGE_URI -n $NAMESPACE
        kubectl rollout status deployment/${DEPLOYMENT_NAME} -n $NAMESPACE
